#!/usr/bin/env ruby
require 'gtk2'
require File.join ENV['HOME'],"src/fim","config.rb"

@win = Gtk::Window.new
@file = @index[@tag][@current]
@pixbuf = Gdk::Pixbuf.new @file

@step = 10
@ratio = [@win.screen.width/@pixbuf.width.to_f, @win.screen.height.to_f/@pixbuf.height].min
@pixbuf = @pixbuf.scale(@pixbuf.width*@ratio, @pixbuf.height*@ratio)
@width = @pixbuf.width
@height = 9*@width/16
@x = 0
@y = (@pixbuf.height-@height)/2

@area = Gtk::DrawingArea.new
@win.add(@area)

def draw
  
  @x = 0 if @x < 0
  @y = 0 if @y < 0

  @width = @pixbuf.width - @x if @x + @width > @pixbuf.width
  @height = 9*@width/16
  if @y + @height > @pixbuf.height
    @height = @pixbuf.height - @y
    @width = 16*@height/9
  end

  @area.window.clear
  @area.window.draw_pixbuf nil, @pixbuf, @x, @y, @x,  @y, @width, @height, Gdk::RGB::DITHER_NORMAL, 0, 0
end

@area.signal_connect("expose_event") do
  draw
end

@win.signal_connect("key-press-event") do |w,e|
  case Gdk::Keyval.to_name(e.keyval)
  when "q"
    Gtk.main_quit
  when "Escape"
    Gtk.main_quit
  when "h"
    @x -= @step; draw
  when "l"
    @x += @step; draw
  when "k"
    @y -= @step; draw
  when "j"
    @y += @step; draw
  when "minus"
    @width -= @step; draw
  when /equal|plus/
    @width += @step; draw
  when "0"
    @width = @pixbuf.width; draw
  when "comma"
    @step = 1
  when "period"
    @step = 10
  when "Return"
    cropped = @file.sub(/.jpg/i,'crop.jpg')
    puts `jpegtran -copy all -crop #{(@width/@ratio).round}x#{(@height/@ratio).round}+#{(@x/@ratio).round}+#{(@y/@ratio).round} #{@file} > #{cropped}`
    `fim-thumb #{cropped}` 
    exif = MiniExiftool.new cropped
    keywords = exif.keywords.to_a.collect{|t| t.to_s}
    keywords -= @q_tags 
    keywords << "3"
    exif.save_keywords keywords
    keywords.each{|t| @index[t] << cropped}
    File.open(@indexfile,"w+"){|f| f.puts @index.to_yaml}
    Gtk.main_quit
  else
    #puts Gdk::Keyval.to_name(e.keyval)
  end
end
@win.signal_connect("destroy") { Gtk.main_quit }

@win.show_all
Gtk.main
